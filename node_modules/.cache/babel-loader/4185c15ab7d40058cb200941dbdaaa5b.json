{"ast":null,"code":"import _objectSpread from \"/home/doopath/Files/coderpool/React/rofl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/doopath/Files/coderpool/React/rofl/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { searchInitialState } from \"../initialState\";\n\nvar SearchReducer = function SearchReducer(initialState) {\n  var _this = this;\n\n  _classCallCheck(this, SearchReducer);\n\n  this.initialState = void 0;\n\n  this.reduce = function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (action.type === \"SWITCH_SEARCHER_MODE\") {\n      return _objectSpread({}, state, {\n        searcherMode: action.payload\n      });\n    } else if (action.type === \"SET_SEARCHER_VALUE\") {\n      return _objectSpread({}, state, {\n        searcherValue: action.payload\n      });\n    } else if (action.type === \"SEARCH_EXPRESSION\") {\n      action.payload.search(action.payload.expression, action.payload.items, action.payload.fast);\n      return _objectSpread({}, state);\n    } else {\n      return state;\n    }\n  };\n\n  this.initialState = initialState;\n};\n\nexport var searchReducer = new SearchReducer(searchInitialState).reduce;","map":{"version":3,"sources":["/home/doopath/Files/coderpool/React/rofl/src/store/reducers/searchReducer.ts"],"names":["searchInitialState","SearchReducer","initialState","reduce","state","action","type","searcherMode","payload","searcherValue","search","expression","items","fast","searchReducer"],"mappings":";;AAAA,SAASA,kBAAT,QAAoD,iBAApD;;IAEMC,a,GAGJ,uBAAmBC,YAAnB,EAAyC;AAAA;;AAAA;;AAAA,OAFjCA,YAEiC;;AAAA,OAIlCC,MAJkC,GAIzB,YAA+D;AAAA,QAA9DC,KAA8D,uEAA9C,KAAI,CAACF,YAAyC;AAAA,QAA3BG,MAA2B;;AAC7E,QAAIA,MAAM,CAACC,IAAP,KAAgB,sBAApB,EAA4C;AAC1C,+BAAYF,KAAZ;AAAmBG,QAAAA,YAAY,EAAEF,MAAM,CAACG;AAAxC;AACD,KAFD,MAEO,IAAIH,MAAM,CAACC,IAAP,KAAgB,oBAApB,EAA0C;AAC/C,+BAAYF,KAAZ;AAAmBK,QAAAA,aAAa,EAAEJ,MAAM,CAACG;AAAzC;AACD,KAFM,MAEA,IAAIH,MAAM,CAACC,IAAP,KAAgB,mBAApB,EAAyC;AAC9CD,MAAAA,MAAM,CAACG,OAAP,CAAeE,MAAf,CAAsBL,MAAM,CAACG,OAAP,CAAeG,UAArC,EAAiDN,MAAM,CAACG,OAAP,CAAeI,KAAhE,EAAuEP,MAAM,CAACG,OAAP,CAAeK,IAAtF;AACA,+BAAYT,KAAZ;AACD,KAHM,MAGA;AACL,aAAOA,KAAP;AACD;AACF,GAfwC;;AACvC,OAAKF,YAAL,GAAoBA,YAApB;AACD,C;;AAgBH,OAAO,IAAMY,aAAa,GAAG,IAAIb,aAAJ,CAAkBD,kBAAlB,EAAsCG,MAA5D","sourcesContent":["import { searchInitialState, Reducer, action } from \"../initialState\";\n\nclass SearchReducer implements Reducer {\n  private initialState: object;\n\n  public constructor(initialState: object) {\n    this.initialState = initialState;\n  }\n\n  public reduce = (state: object = this.initialState, action: action): object => {\n    if (action.type === \"SWITCH_SEARCHER_MODE\") {\n      return { ...state, searcherMode: action.payload };\n    } else if (action.type === \"SET_SEARCHER_VALUE\") {\n      return { ...state, searcherValue: action.payload };\n    } else if (action.type === \"SEARCH_EXPRESSION\") {\n      action.payload.search(action.payload.expression, action.payload.items, action.payload.fast);\n      return { ...state };\n    } else {\n      return state;\n    }\n  };\n}\n\nexport const searchReducer = new SearchReducer(searchInitialState).reduce;\n"]},"metadata":{},"sourceType":"module"}