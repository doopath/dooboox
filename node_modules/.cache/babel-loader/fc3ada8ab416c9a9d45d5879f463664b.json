{"ast":null,"code":"import _objectSpread from \"/home/doopath/Files/coderpool/React/dooboox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/doopath/Files/coderpool/React/dooboox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/doopath/Files/coderpool/React/dooboox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/doopath/Files/coderpool/React/dooboox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// TODO: you should to get this gone.\n// Types\nvar rules = {\n  start: [{\n    name: \"space\",\n    exp: /\\s+/\n  }, {\n    name: \"comment\",\n    exp: /\\/\\/[A-ZА-Яа-яa-z0-9!@#$(){}\\s\\p{S}]+/\n  }, {\n    name: \"custom.word\",\n    exp: /(console|log|warn|error|Error|document|window|getElementById|getElementsByClassName|getElementsByTagName|Array|Object|RegExp|type|fetch|ajax|css|js|json|html)\\b/\n  }, {\n    name: \"string.start\",\n    exp: /['\"`]/,\n    next: [{\n      name: \"string.escape\",\n      exp: /\\\\./\n    }, {\n      name: \"string.end\",\n      exp: /['\"`]/,\n      exit: true\n    }, {\n      name: \"string.content\",\n      exp: /./,\n      join: true\n    }]\n  }, {\n    name: \"number\",\n    exp: /(\\+-)?\\d+(\\.\\d+)?/\n  }, {\n    name: \"par.open\",\n    exp: /[(\\[{]/\n  }, {\n    name: \"par.close\",\n    exp: /[)\\]}]/\n  }, {\n    name: \"keyword\",\n    exp: /(break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with|class|const|enum|export|extends|import|super|implements|interface|let|package|private|protected|public|static|yield|null|undefined|string|number|boolean|true|false|let)\\b/\n  }, {\n    name: \"symbol\",\n    exp: /(?:[!\\$-&\\*-,\\.\\/:-@\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA])/\n  }, {\n    name: \"word\",\n    exp: /[a-zA-Z_$#]+[a-zA-Z0-9_$]*/\n  }]\n}; // Main magic\n\nexport var syntaxHighlight = function syntaxHighlight(codeLine) {\n  var _this = this;\n\n  _classCallCheck(this, syntaxHighlight);\n\n  this.codeLine = void 0;\n  this.rules = void 0;\n  this.colors = void 0;\n  this.styles = void 0;\n\n  this.highlight = function () {\n    var parsingElement = {\n      rule: _this.rules.start,\n      globalRules: _this.rules,\n      str: _this.codeLine\n    };\n\n    var result = _this.parse(parsingElement).map(function (token) {\n      for (var style in _this.styles) {\n        if (style === token.rule.name.split(\".\")[0]) {\n          return _this.styles[style](token.token);\n        }\n      }\n\n      return token.token;\n    });\n\n    return result.join(\"\");\n  };\n\n  this.findToken = function (str, rules, globalRules) {\n    var _iterator = _createForOfIteratorHelper(rules),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _rule = _step.value;\n\n        var match = _rule.exp.exec(str);\n\n        if (!match) continue;\n        if (match.index !== 0) continue;\n\n        var _match = _slicedToArray(match, 1),\n            token = _match[0];\n\n        var result = {\n          rule: _rule,\n          token: token\n        };\n        return [result].concat(_toConsumableArray(_this.parse({\n          str: str.substring(token.length),\n          rule: _rule.next || false,\n          globalRules: globalRules,\n          internal: true\n        })));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return [];\n  };\n\n  this.parse = function (parsingElement) {\n    if (!parsingElement.rule) return [];\n    var offString = parsingElement.str;\n    var index = 0;\n    var tokens = [];\n\n    while (true) {\n      var foundTokens = _this.findToken(offString, parsingElement.rule, parsingElement.globalRules);\n\n      if (!foundTokens.length) break;\n      foundTokens.forEach(function (item) {\n        var token = _objectSpread({}, item, {\n          index: index\n        });\n\n        offString = offString.substring(item.token.length);\n        index += item.token.length;\n        tokens.push(token);\n      });\n      if (parsingElement.internal && foundTokens.some(function (_ref) {\n        var rule = _ref.rule;\n        return rule.exit;\n      })) break;\n    }\n\n    return tokens.reduceRight(function (res, token) {\n      if (token.rule.join && res[0] && res[0].rule === token.rule) {\n        res[0].token = token.token + res[0].token;\n      } else {\n        res.unshift(token);\n      }\n\n      return res;\n    }, []);\n  };\n\n  this.codeLine = codeLine;\n  this.rules = rules;\n  this.colors = {\n    white: function white(el) {\n      return \"<span class=\\\"tp-code-white\\\">\".concat(el, \"</span>\");\n    },\n    blue: function blue(el) {\n      return \"<span class=\\\"tp-code-blue\\\">\".concat(el, \"</span>\");\n    },\n    purple: function purple(el) {\n      return \"<span class=\\\"tp-code-purple\\\">\".concat(el, \"</span>\");\n    },\n    green: function green(el) {\n      return \"<span class=\\\"tp-code-green\\\">\".concat(el, \"</span>\");\n    },\n    yellow: function yellow(el) {\n      return \"<span class=\\\"tp-code-yellow\\\">\".concat(el, \"</span>\");\n    },\n    orange: function orange(el) {\n      return \"<span class=\\\"tp-code-orange\\\">\".concat(el, \"</span>\");\n    },\n    gray: function gray(el) {\n      return \"<span class=\\\"tp-code-gray\\\">\".concat(el, \"</span>\");\n    },\n    ocean: function ocean(el) {\n      return \"<span class=\\\"tp-code-ocean\\\">\".concat(el, \"</span>\");\n    }\n  };\n  this.styles = {\n    defualt: this.colors.white,\n    keyword: this.colors.blue,\n    number: this.colors.purple,\n    string: this.colors.green,\n    par: this.colors.yellow,\n    symbol: this.colors.orange,\n    comment: this.colors.gray,\n    custom: this.colors.ocean\n  };\n};","map":{"version":3,"sources":["/home/doopath/Files/coderpool/React/dooboox/src/components/modules/SyntaxHighlight.ts"],"names":["rules","start","name","exp","next","exit","join","syntaxHighlight","codeLine","colors","styles","highlight","parsingElement","rule","globalRules","str","result","parse","map","token","style","split","findToken","match","exec","index","substring","length","internal","offString","tokens","foundTokens","forEach","item","push","some","reduceRight","res","unshift","white","el","blue","purple","green","yellow","orange","gray","ocean","defualt","keyword","number","string","par","symbol","comment","custom"],"mappings":"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","sourcesContent":["// TODO: you should to get this gone.\n// Types\ntype rule = {\n  name: string,\n  exp: RegExp,\n  exit?: boolean,\n  join?: boolean,\n  next?: Array<rule>\n}\n\ntype rules = {\n  start: Array<rule>\n}\n\ntype ParsingElement = { \n  str: string,\n  rule: Array<rule> | false,\n  globalRules: object,\n  internal?: boolean\n}\n\ntype colors  = {\n  white: Function,\n  blue: Function,\n  purple: Function,\n  green: Function,\n  yellow: Function,\n  orange: Function,\n  gray: Function,\n  ocean: Function\n}\n\nconst rules: rules = {\n  start: [\n    {\n      name: \"space\",\n      exp: /\\s+/\n    },\n    {\n      name: \"comment\",\n      exp: /\\/\\/[A-ZА-Яа-яa-z0-9!@#$(){}\\s\\p{S}]+/\n    },\n    {\n      name: \"custom.word\",\n      exp: /(console|log|warn|error|Error|document|window|getElementById|getElementsByClassName|getElementsByTagName|Array|Object|RegExp|type|fetch|ajax|css|js|json|html)\\b/\n    },\n    {\n      name: \"string.start\",\n      exp: /['\"`]/,\n      next: [\n        {\n          name: \"string.escape\",\n          exp: /\\\\./\n        },\n        {\n          name: \"string.end\",\n          exp: /['\"`]/,\n          exit: true\n        },\n        {\n          name: \"string.content\",\n          exp: /./,\n          join: true\n        }\n      ]\n    },\n    {\n      name: \"number\",\n      exp: /(\\+-)?\\d+(\\.\\d+)?/\n    },\n    {\n      name: \"par.open\",\n      exp: /[(\\[{]/\n    },\n    {\n      name: \"par.close\",\n      exp: /[)\\]}]/\n    },\n    {\n      name: \"keyword\",\n      exp: /(break|case|catch|continue|debugger|default|delete|do|else|finally|for|function|if|in|instanceof|new|return|switch|this|throw|try|typeof|var|void|while|with|class|const|enum|export|extends|import|super|implements|interface|let|package|private|protected|public|static|yield|null|undefined|string|number|boolean|true|false|let)\\b/\n    },\n    {\n      name: \"symbol\",\n      exp: /[,.\\*;!@%&=|\\/:?\\p{S}]/u\n    },\n    {\n      name: \"word\",\n      exp: /[a-zA-Z_$#]+[a-zA-Z0-9_$]*/\n    }\n  ]\n}\n\n// Main magic\nexport class syntaxHighlight {\n  private codeLine: string;\n  private rules: rules;\n  private colors: colors;\n  private styles: object;\n\n  constructor(codeLine: string) {\n    this.codeLine = codeLine;\n    this.rules = rules;\n    this.colors = {\n      white: (el: string): string => { return `<span class=\"tp-code-white\">${el}</span>` },\n      blue: (el: string): string => { return `<span class=\"tp-code-blue\">${el}</span>` },\n      purple: (el: string): string => { return `<span class=\"tp-code-purple\">${el}</span>` },\n      green: (el: string): string => { return `<span class=\"tp-code-green\">${el}</span>` },\n      yellow: (el: string): string => { return `<span class=\"tp-code-yellow\">${el}</span>` },\n      orange: (el: string): string => { return `<span class=\"tp-code-orange\">${el}</span>` },\n      gray: (el: string): string => { return `<span class=\"tp-code-gray\">${el}</span>` },\n      ocean: (el: string): string => { return `<span class=\"tp-code-ocean\">${el}</span>` }\n    };\n    this.styles = {\n      defualt: this.colors.white,\n      keyword: this.colors.blue,\n      number: this.colors.purple,\n      string: this.colors.green,\n      par: this.colors.yellow,\n      symbol: this.colors.orange,\n      comment: this.colors.gray,\n      custom: this.colors.ocean\n    }\n  }\n\n  public highlight = (): string => {\n    let parsingElement: ParsingElement = {\n      rule: this.rules.start,\n      globalRules: this.rules,\n      str: this.codeLine\n    }\n\n    let result: Array<string> = this.parse(parsingElement).map((token: any): string => {\n      for (let style in this.styles) {\n        if (style === token.rule.name.split(\".\")[0]) {\n          return (this.styles[style](token.token));\n        }\n      }\n      return token.token;\n    });\n\n    return result.join(\"\");\n  }\n\n  private findToken = (str: string, rules: Array<rule>, globalRules: object): Array<object> => {\n    for (let rule of rules) {\n      const match: RegExpMatchArray | null = rule.exp.exec(str);\n\n      if (!match) continue;\n      if (match.index !== 0) continue;\n  \n      const [token] = match;\n      const result: object = { rule, token };\n\n      return ([\n        result,\n        ...this.parse({\n          str: str.substring(token.length), \n          rule: rule.next || false,\n          globalRules, \n          internal: true\n        })\n      ]);\n    }\n\n    return [];\n  }\n\n  private parse = (parsingElement: ParsingElement): Array<object> => {\n    if (!parsingElement.rule) return [];\n    let offString: string = parsingElement.str;\n    let index: number = 0;\n\n    let tokens: Array<any> = [];\n\n    while (true) {\n      const foundTokens: Array<any> = this.findToken(\n        offString, parsingElement.rule, parsingElement.globalRules);\n\n      if (!foundTokens.length) break;\n\n      foundTokens.forEach((item) => {\n        const token: object = { ...item, index };\n        \n        offString = offString.substring(item.token.length);\n        index += item.token.length;\n\n        tokens.push(token);\n      });\n\n      if (parsingElement.internal && foundTokens.some(({ rule }) => rule.exit)) break;\n    }\n\n    return tokens.reduceRight((res, token) => {\n      if (token.rule.join && res[0] && res[0].rule === token.rule) {\n        res[0].token = token.token + res[0].token;\n      } else { \n        res.unshift(token);\n      }\n\n      return res;\n    }, []);\n  }\n\n} \n\n"]},"metadata":{},"sourceType":"module"}