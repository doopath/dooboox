{"ast":null,"code":"import _toConsumableArray from \"/home/doopath/Files/coderpool/React/dooboox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/doopath/Files/coderpool/React/dooboox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/doopath/Files/coderpool/React/dooboox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { rootInitialState } from \"../initialState\";\n\nvar RootReducer = function RootReducer(initialState) {\n  var _this = this;\n\n  _classCallCheck(this, RootReducer);\n\n  this.initialState = void 0;\n\n  this.addNewText = function (currentTexts, newText) {\n    var newTexts = _objectSpread({}, currentTexts);\n\n    newTexts[newText[\"name\"]] = newText[\"text\"];\n    return newTexts;\n  };\n\n  this.switchBodyScroll = function (payload) {\n    if (payload === \"LOCK\") {\n      document.getElementsByTagName(\"body\")[0].classList.add(\"scroll-lock\");\n      return \"LOCKED\";\n    } else {\n      document.getElementsByTagName(\"body\")[0].classList.remove(\"scroll-lock\");\n      return \"UNLOCKED\";\n    }\n  };\n\n  this.reduce = function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (action.type === \"SWITCH_BODY_SCROLL\") {\n      return _objectSpread({}, state, {\n        bodyScrollState: _this.switchBodyScroll(action.payload)\n      });\n    } else if (action.type === \"SET_THEMES\") {\n      return _objectSpread({}, state, {\n        themes: [action.payload.items]\n      });\n    } else if (action.type === \"SET_CURRENT_PAGE\") {\n      return _objectSpread({}, state, {\n        currentPageId: action.payload.id,\n        nextPage: action.payload.next,\n        currentPage: _toConsumableArray(action.payload.components)\n      });\n    } else if (action.type === \"ADD_NEW_TEXT\") {\n      return _objectSpread({}, state, {\n        texts: _objectSpread({}, _this.addNewText(state[\"texts\"], action.payload))\n      });\n    } else if (action.type === \"SET_PAGE_SEARCHER_VALUE\") {\n      return _objectSpread({}, state, {\n        pageSearcherValue: action.payload\n      });\n    } else if (action.type === \"SET_PRELOADER_MODE\") {\n      return _objectSpread({}, state, {\n        preloaderMode: action.payload\n      });\n    } else if (action.type === \"ADD_NEW_AUTHOR\") {\n      var newAuthors = _objectSpread({}, state[\"authors\"]);\n\n      newAuthors[action.payload[\"id\"]] = action.payload;\n      return _objectSpread({}, state, {\n        authors: _objectSpread({}, newAuthors)\n      });\n    } else {\n      return state;\n    }\n  };\n\n  this.initialState = initialState;\n};\n\nexport var rootReducer = new RootReducer(rootInitialState).reduce;","map":{"version":3,"sources":["/home/doopath/Files/coderpool/React/dooboox/src/store/reducers/rootReducer.ts"],"names":["rootInitialState","RootReducer","initialState","addNewText","currentTexts","newText","newTexts","switchBodyScroll","payload","document","getElementsByTagName","classList","add","remove","reduce","state","action","type","bodyScrollState","themes","items","currentPageId","id","nextPage","next","currentPage","components","texts","pageSearcherValue","preloaderMode","newAuthors","authors","rootReducer"],"mappings":"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","sourcesContent":["import { rootInitialState, Reducer, action } from \"../initialState\";\n\nclass RootReducer implements Reducer {\n  private initialState: object;\n\n  public constructor(initialState: object) {\n    this.initialState = initialState;\n  }\n\n  private addNewText = (currentTexts: object, newText: object): object => {\n    let newTexts: object = { ...currentTexts };\n    newTexts[newText[\"name\"]] = newText[\"text\"];\n    return newTexts;\n  };\n\n  private switchBodyScroll = (payload: \"LOCK\" | \"UNLOCK\"): \"LOCKED\" | \"UNLOCKED\" => {\n    if (payload === \"LOCK\") {\n      document.getElementsByTagName(\"body\")[0].classList.add(\"scroll-lock\");\n      return \"LOCKED\";\n    } else {\n      document.getElementsByTagName(\"body\")[0].classList.remove(\"scroll-lock\");\n      return \"UNLOCKED\";\n    }\n  };\n\n  public reduce = (state: object = this.initialState, action: action): object => {\n    if (action.type === \"SWITCH_BODY_SCROLL\") {\n      return {\n        ...state,\n        bodyScrollState: this.switchBodyScroll(action.payload),\n      };\n    } else if (action.type === \"SET_THEMES\") {\n      return { ...state, themes: [action.payload.items] };\n    } else if (action.type === \"SET_CURRENT_PAGE\") {\n      return {\n        ...state,\n        currentPageId: action.payload.id,\n        nextPage: action.payload.next,\n        currentPage: [...action.payload.components],\n      };\n    } else if (action.type === \"ADD_NEW_TEXT\") {\n      return {\n        ...state,\n        texts: { ...this.addNewText(state[\"texts\"], action.payload) },\n      };\n    } else if (action.type === \"SET_PAGE_SEARCHER_VALUE\") {\n      return { ...state, pageSearcherValue: action.payload };\n    } else if (action.type === \"SET_PRELOADER_MODE\") {\n      return { ...state, preloaderMode: action.payload };\n    } else if (action.type === \"ADD_NEW_AUTHOR\") {\n      let newAuthors = { ...state[\"authors\"] };\n      newAuthors[action.payload[\"id\"]] = action.payload;\n      return { ...state, authors: { ...newAuthors } };\n    } else {\n      return state;\n    }\n  };\n}\n\nexport const rootReducer = new RootReducer(rootInitialState).reduce;\n"]},"metadata":{},"sourceType":"module"}